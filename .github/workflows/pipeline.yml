# Nome do Workflow
name: Hackthon Backend Pipeline

# Evento que irá acionar a pipeline
on: 
  push:
    branches:
      - feat/pipeline

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Download do Repositório
        uses: actions/checkout@v3       # https://github.com/actions/checkout
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4   # https://github.com/actions/setup-python
        with:
          python-version: '3.10'

      - name: Install Requirements
        run:  pip install flask flask-wtf flask-cors PyMySQL cryptography gunicorn

      - name: Docker Login
        run: | 
          echo '${{ secrets.GOOGLE_CREDENTIALS }}' > key.json
          cat key.json | docker login -u _json_key --password-stdin '${{ vars.GOOGLE_ARTIFACT }}'
      - name: Build & Push Image
        run: | 
          docker build -t ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest .
          docker push ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest

  eploy:
    needs: Build
    runs-on: ubuntu-latest

    steps:
      - name: Clone do Repositório
        uses: actions/checkout@v2

      - name: Autenticação no Google Cloud
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Deploy Backend no  Cloud Run
        id: deploy
        run: |-
          gcloud run deploy backend \
            --quiet \
            --region us-central1 \
            --image ${{ vars.ARTIFACT_REGISTRY }}/${{ vars.GOOGLE_MYAPP }}:latest \
            --platform managed \
            --set-env-vars CLOUD_SQL_CONNECTION_NAME=grupo-08:us-central1:spot-music-instance,CLOUD_SQL_DATABASE_NAME=spot-music-instance,CLOUD_SQL_PASSWORD=%,CLOUD_SQL_USERNAME=root \
            --allow-unauthenticated \
            --add-cloudsql-instances grupo-08:us-central1:spot-music-instance \
            --project ${{ vars.GOOGLE_PROJECT_ID }} \
            --format json